server:
  port: 9000

spring:
  application:
    name: cloudberry
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: cloudberry-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      spring:
        json:
          trusted.packages: '*'
  data:
    mongodb:
      host: localhost
      port: 27017
      database: cloudberry
  influx2:
    url: http://localhost:9999/
    username: root
    password: ziemniak
    bucket: cloudberry-logs

influx:
  organization-name: cloudberry
  buckets:
    default-logs: cloudberry-logs
    default-metrics: cloudberry-metrics
  measurements:
    default-measurement-name: cloudberry-default

management.metrics.export.influx:
  db: cloudberry-metrics
  auto-create-db: true
  batch-size: 5000
  password: ${spring.influx2.password}
  user-name: ${spring.influx2.username}
  uri: ${spring.influx2.url}
  step: 1m # reporting frequency (in minutes)
---

spring:
  profiles: prod
  kafka:
    bootstrap-servers: kafka-cb:29092
  data:
    mongodb:
      host: cloudberry-cb

---

spring:
  profiles: dev
  kafka:
    bootstrap-servers: localhost:9092

---

spring:
  profiles: olgierd
  influx2:
    org: 66fb4172c944fe08
    token: m8m8olbdS7PQUNf4MxK7BOvIjG01iGe7FyoP0RXcHNeQXA9xeV2Lo9fr2qXxhrFuyvKNo8D4jqhLyPgZ9Q7Q2Q==

---

spring:
  profiles: michal
  influx2:
    org: 05f6c0b5899c8000
    token: aGeYf1zFZMcytTyzsRHsWBWvVQgKE88hlCymhncscnEZEcy-dnjKlkm5WFSKgAIFsbJNXYvkOJeZtX62DyA1qA==
