server:
  port: 9000

spring:
  application:
    name: cloudberry
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: cloudberry-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      spring:
        json:
          trusted.packages: '*'
  data:
    mongodb:
      host: localhost
      port: 27017
      database: cloudberry
      auto-index-creation: false
  influx2: # influxdb-client-java properties
    url: http://localhost:9999/
    username: root
    password: ziemniak
    token: W5lZySDF5A1XevbKqIK717PHBxZOD-D0pSkwYu--LmmVYudgPMGJ-a-oOVVjDl_tgjASZ1efAtGZkV6FbVIYUQ==
    org: cloudberry
    bucket: cloudberry_logs

influx: # custom influxdb properties used in InfluxConfig
  organization-name: ${spring.influx2.org}
  buckets:
    default-logs: ${spring.influx2.bucket}
    default-logs-from-streams: cloudberry_logs_streams
    default-metrics: cloudberry_metrics
  measurements:
    default-measurement-name: cloudberry-default

management:
  metrics:
    export:
      statsd:
        enabled: true
        flavor: telegraf
        host: ${TELEGRAF_HOST:localhost}
        port: 8125
---

spring:
  profiles: prod
  kafka:
    bootstrap-servers: kafka-cb:29092
  data:
    mongodb:
      host: mongodb-cb
  influx2:
    url: http://influxdb-cb:9999/

---

spring:
  profiles: dev
  kafka:
    bootstrap-servers: localhost:9092
